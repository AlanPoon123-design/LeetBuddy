.chat-input-textbox {
    background-color: var(--color-gray-5);
    border-radius: inherit;
    z-index: 2;
    resize: none;
    box-sizing: border-box; /* Ensures padding and border are part of the element's dimensions */
    border: 2px solid var(--color-gray-5); /* Custom border */

    min-height: 50px; /* Minimum height */
    max-height: 100px; /* Maximum height */
    
}

textarea,
input,
select {
  margin: 0;
  vertical-align: bottom;
}

.text-input {
    background-color: var(--color-gray-5);
    position: relative;
    border-radius: var(--corner-radius);
    z-index:1;
}

textarea::placeholder {
    color: var(--color-white-4); /* Change this to your desired color */
}
  

@property --gradient-angle {
    syntax: "<angle>";
    initial-value: 0deg;
    inherits: false;
}

@keyframes rotation {
    0% { --gradient-angle: 0deg;}
    100% { --gradient-angle: 360deg;}
}

.text-input::before, .text-input::after {
    opacity: 0;
    content: "";
    position: absolute;
    inset: -2px;
    border-radius: inherit;
    z-index: -2;
    
    background: conic-gradient(
        from var(--gradient-angle),
        var(--color-gold-1),
        var(--color-gold-2),
        var(--color-gold-2),
        var(--color-gold-1)
    );

    animation: rotation 3s linear infinite;
    transition: opacity 0.3s ease-in-out; /* Smooth opacity transition */
}

.text-input::after {
    filter: blur(0.3rem);
}

.chat-input-textbox:focus,
.text-input:focus-within { /* Use focus-within to detect focus on the container */
    outline: none; 
}

/* Make the pseudo-elements visible when focused */
.text-input:focus-within::before,
.text-input:focus-within::after {
    opacity: 1; /* Make pseudo-elements visible when focused */
}

